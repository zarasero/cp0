
#include "Cat.hpp"

Cat::Cat() : Animal() {
    type = "Cat";
    brain = new Brain;
    std::cout << "üê± Cat constructor called" << std::endl;
}

Cat::~Cat() {
    std::cout << "üê± Cat destructor called" << std::endl;
    delete brain;
}

Cat &Cat::operator=(const Cat &other) {
    std::cout << "üê± Cat copy assignment operator called" << std::endl;
    if (this != &other) {
        this->type = other.type;   // –ö–æ–ø–∏—Ä—É–µ–º —Ç–∏–ø
        delete this->brain;        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–º—è—Ç—å
        this->brain = new Brain(*other.brain); // –ì–ª—É–±–æ–∫–∞—è –∫–æ–ø–∏—è!
    }
    return *this;
}


Cat::Cat(const Cat &other) : Animal(other) {
    std::cout << "üê± Cat copy constructor called" << std::endl;
    this->brain = new Brain(*other.brain); // ‚úÖ –ì–ª—É–±–æ–∫–∞—è –∫–æ–ø–∏—è!
}

void Cat::makeSound() const {
    std::cout << "üê± Cat sound" << std::endl;
}
