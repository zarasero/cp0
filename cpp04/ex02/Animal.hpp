#ifndef ANIMAL_HPP
#define ANIMAL_HPP

#include <iostream>

// üêæ –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å Animal
class Animal {
protected:
    std::string type; // üè∑Ô∏è –¢–∏–ø –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
public:
    // üèóÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    Animal();
    
    // üóëÔ∏è –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä (–≤–∞–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–≤)
    virtual ~Animal();
    
    // üîç –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∏–ø–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    virtual std::string getType() const;
    
    // –¢–µ–ø–µ—Ä—å `makeSound()` —á–∏—Å—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è, –∫–ª–∞—Å—Å —Å—Ç–∞–ª –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–º!
    virtual void makeSound() const = 0;
    
    // üîÑ –û–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è
    Animal &operator=(const Animal &other);
    
    // üìã –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    Animal(const Animal &other);
};

#endif
