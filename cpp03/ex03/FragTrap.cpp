
#include "FragTrap.hpp"

// КОНСТРУКТОР ПО УМОЛЧАНИЮ
FragTrap::FragTrap() 
{
    std::cout << "FragTrap constructor called" << std::endl; // Выводим сообщение о вызове конструктора
    return; // Завершаем конструктор
}

// КОНСТРУКТОР С ПАРАМЕТРОМ ИМЕНИ
FragTrap::FragTrap(std::string name) : ClapTrap(name) // Конструктор с параметром имени, передаем его в конструктор базового класса ClapTrap
{
    std::cout << "FragTrap constructor called" << std::endl; // Выводим сообщение о вызове конструктора

    setAD(30); // Устанавливаем атаку для FragTrap
    setEP(100); // Устанавливаем очки энергии для FragTrap
    setHP(100); // Устанавливаем здоровье для FragTrap
    return; // Завершаем конструктор
}

// ДЕСТРУКТОР
FragTrap::~FragTrap() 
{
    std::cout << "FragTrap destructor called" << std::endl; // Выводим сообщение о вызове деструктора
    return; // Завершаем деструктор
}

// КОНСТРУКТОР КОПИРОВАНИЯ
/*FragTrap::FragTrap(const FragTrap& src) 
{
    *this = src; // Используем оператор присваивания для копирования данных из src
    return; // Завершаем конструктор
}*/

FragTrap::FragTrap(const FragTrap& src) : ClapTrap(src) // Явная инициализация базового класса
{
    *this = src; // Используем оператор присваивания для копирования
    return;
}


// МЕТОД HIGHFIVESGUYS
void FragTrap::highFivesGuys(void) 
{
    std::cout << "FragTrap : High Fives !!" << std::endl; // Выводим сообщение для high five
    return; // Завершаем метод
}

// ОПЕРАТОР ПРИСВАИВАНИЯ
FragTrap& FragTrap::operator=(const FragTrap& rhs) 
{
    if (this != &rhs) // Проверка на самоприсваивание
    {
        setAD(rhs.getAD()); // Копируем атаку
        setEP(rhs.getEP()); // Копируем очки энергии
        setHP(rhs.getHP()); // Копируем здоровье
        setName(rhs.getName()); // Копируем имя
    }
    return (*this); // Возвращаем ссылку на текущий объект
}
/*Подробные комментарии:
Конструктор по умолчанию (FragTrap()): этот конструктор не принимает параметров и просто выводит сообщение о вызове конструктора.

Конструктор с параметром имени (FragTrap(std::string name)): Этот конструктор:

Принимает строку имени и передает ее в базовый класс ClapTrap.
Инициализирует значения для атаки (AD), очков энергии (EP) и здоровья (HP) для объекта типа FragTrap.
Деструктор (~FragTrap()): этот метод выводит сообщение о вызове деструктора и завершает его выполнение.

Конструктор копирования (FragTrap(const FragTrap& src)): использует оператор присваивания для копирования значений из объекта src в текущий объект. Это позволяет создать новый объект на основе существующего.

Метод highFivesGuys(): этот метод выводит сообщение, заявляющее о высоких пяти. Он не выполняет других действий.

Оператор присваивания (operator=): Этот метод:

Проверяет на самоприсваивание.
Если объект не является самоприсваивающимся, копирует значения для всех атрибутов (атака, очки энергии, здоровье, имя).
Возвращает ссылку на текущий объект, что позволяет использовать цепочку присваиваний.
Дополнительные замечания:
Код корректно обрабатывает копирование данных и создание объектов.
Используется полиморфизм через базовый класс ClapTrap для передачи имени, но также инициализируются дополнительные атрибуты, уникальные для класса FragTrap
*/